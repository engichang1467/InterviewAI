{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\rdjau\\\\HacktheNorth2020++\\\\hackthenorth2020\\\\src\\\\pages\\\\Interview.js\";\nimport React, { Component } from 'react';\nimport Webcam from \"react-webcam\";\nexport class Interview extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      timerOn: false,\n      //timer will not start automatically\n      timerStart: 0,\n      //timer will count up from 0\n      timerTime: 0\n    };\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        this.setState({\n          timerTime: Date.now() - this.state.timerStart\n        });\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      this.setState({\n        timerOn: false\n      });\n      clearInterval(this.timer);\n    };\n\n    this.resetTimer = () => {\n      this.setState({\n        timerStart: 0,\n        timerTime: 0\n      });\n    };\n  }\n\n  render() {\n    const videoConstraints = {\n      width: 575,\n      height: 375,\n      mirrored: true,\n      facingMode: \"user\" //front-facing camera\n\n    };\n    const {\n      timerTime\n    } = this.state;\n    let hours = (\"0\" + Math.floor(timerTime / 3600000) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 60000) % 60).slice(-2);\n    let seconds = (\"0\" + Math.floor(timerTime / 1000)).slice(-2);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          position: 'absolute',\n          left: '33.75%',\n          top: '33%',\n          transform: 'translate(-50%, -50%)'\n        },\n        children: [hours, \" : \", minutes, \" : \", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), this.state.timerOn === false && this.state.timerTime === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          left: '73%',\n          top: '22.5%',\n          transform: 'translate(-50%, -50%)'\n        },\n        onClick: this.startTimer,\n        children: \"Ready!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this), this.state.timerOn === true && this.state.timerTime > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          left: '73%',\n          top: '22.5%',\n          transform: 'translate(-50%, -50%)'\n        },\n        onClick: this.stopTimer,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }, this), this.state.timerOn === false && this.state.timerTime > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          left: '73%',\n          top: '22.5%',\n          transform: 'translate(-50%, -50%)'\n        },\n        onClick: this.startTimer,\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n        style: {\n          //centering the videofeed\n          position: 'absolute',\n          left: '50%',\n          top: '57%',\n          transform: 'translate(-50%, -50%)'\n        },\n        audio: true,\n        videoConstraints: videoConstraints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Interview;","map":{"version":3,"sources":["C:/Users/rdjau/HacktheNorth2020++/hackthenorth2020/src/pages/Interview.js"],"names":["React","Component","Webcam","Interview","state","timerOn","timerStart","timerTime","startTimer","setState","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","render","videoConstraints","width","height","mirrored","facingMode","hours","Math","floor","slice","minutes","seconds","position","left","top","transform"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Webcam from \"react-webcam\"\r\n\r\nexport class Interview extends Component {\r\n    state = {\r\n        timerOn: false, //timer will not start automatically\r\n        timerStart: 0, //timer will count up from 0\r\n        timerTime: 0\r\n    };\r\n\r\n    startTimer = () => {\r\n        this.setState({\r\n            timerOn: true,\r\n            timerTime: this.state.timerTime,\r\n            timerStart: Date.now() - this.state.timerTime\r\n        });\r\n        this.timer = setInterval ( () => {\r\n            this.setState({\r\n                timerTime: Date.now() - this.state.timerStart\r\n            });\r\n        }, 10);\r\n    };\r\n\r\n    stopTimer = () => {\r\n        this.setState({\r\n            timerOn: false\r\n        });\r\n        clearInterval(this.timer);\r\n    };\r\n\r\n    resetTimer = () => {\r\n        this.setState({\r\n            timerStart: 0,\r\n            timerTime: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const videoConstraints = {\r\n            width: 575,\r\n            height: 375,\r\n            mirrored: true,\r\n            facingMode: \"user\" //front-facing camera\r\n        };\r\n\r\n        const {timerTime} = this.state;\r\n        let hours = (\"0\" + (Math.floor(timerTime / 3600000) % 60)).slice(-2);\r\n        let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n        let seconds = (\"0\" + Math.floor(timerTime / 1000)).slice(-2);\r\n\r\n        return (\r\n            <div>\r\n                <h2 style={{\r\n                    position: 'absolute', left: '33.75%', top: '33%',\r\n                    transform: 'translate(-50%, -50%)'\r\n                }}>\r\n                    {hours} : {minutes} : {seconds}\r\n                </h2>\r\n\r\n                {this.state.timerOn === false && this.state.timerTime === 0 && \r\n                (<button style={{\r\n                    position: 'absolute', left: '73%', top: '22.5%',\r\n                    transform: 'translate(-50%, -50%)'\r\n                }} onClick={this.startTimer}>Ready!</button>)}\r\n\r\n                {this.state.timerOn === true && this.state.timerTime > 0 && \r\n                (<button style={{\r\n                    position: 'absolute', left: '73%', top: '22.5%',\r\n                    transform: 'translate(-50%, -50%)'\r\n                }} onClick={this.stopTimer}>Pause</button>)}\r\n\r\n                {this.state.timerOn === false && this.state.timerTime > 0 && \r\n                (<button style={{\r\n                    position: 'absolute', left: '73%', top: '22.5%',\r\n                    transform: 'translate(-50%, -50%)'\r\n                }} onClick={this.startTimer}>Resume</button>)}\r\n\r\n                <Webcam\r\n                    style={{ //centering the videofeed\r\n                        position: 'absolute', left: '50%', top: '57%',\r\n                        transform: 'translate(-50%, -50%)'\r\n                    }}\r\n                    audio={true}\r\n                    videoConstraints={videoConstraints}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Interview"]},"metadata":{},"sourceType":"module"}